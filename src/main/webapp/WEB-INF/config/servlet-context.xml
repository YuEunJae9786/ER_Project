<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 타일즈 설정파일 위치 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>WEB-INF/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 첫번째로 동작할 타일즈뷰 템플릿 선언 -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- 뷰 리졸버를 2번쨰로 동작하도록 처리 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>
	
	<!-- 컨트롤러 자동 스캔 -->
	<context:component-scan base-package="com.erproject.controller" />
	<!-- 서비스 자동 스캔 -->
	<context:component-scan base-package="com.erproject.*.service" />
	<!-- 소켓 자동 스캔 -->
	<context:component-scan base-package="com.erproject.socket" />
	
	<!-- 파일업로드 최소설정(아이디 반드시 multipartResolver) -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 최대 사이즈 -->
		<beans:property name="maxUploadSize" value="1048576" />
		<!-- 인코딩 설정 -->
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>
	
	<!-- csBoard webSoket -->
	<beans:bean id="csBoardSocketHandler" class="com.erproject.socket.csBoardSocketHandler" />
	<websocket:handlers>
		<websocket:mapping handler="csBoardSocketHandler" path="/csBoardSocket"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<!-- csBoard Intercepter -->
	<beans:bean id="csBoardAuthHandler" class="com.erproject.intercepter.CsBoardAuthHandler" />
	
	<interceptors>
		<!-- 게시판 수정, 삭제 에 대한 권한 핸들러 -->
		<interceptor>
			<mapping path="/csBoard/csBoardUpdate"/>
			<mapping path="/csBoard/qnaRegist"/>
			<beans:ref bean="csBoardAuthHandler"/>
		</interceptor>		
	</interceptors>
	
</beans:beans>
